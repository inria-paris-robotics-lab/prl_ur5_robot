<?xml version="1.0"?>
<launch>
    <arg name="headless_mode" default="true" doc="Automatically send URScript to robot to execute. With this, the URCap is not needed on the robot."/>
    <arg name="setup" default="standart_setup" doc="Robot setup"/>
    <arg name="debug" default="false" doc="Debug flag that will get passed on to ur_control.launch"/>
    <arg name="velocity_control" default="false" doc="Position or Velocity control of the joints"/>
    <arg name="ff_control" default="false" doc="Trajectory of Feed-Forward control of the joints"/>

    <!-- Determine controllers to use -->
    <arg name="controller_names" value="scaled_vel_joint_traj_controller"            if="$(eval     arg('velocity_control') and not arg('ff_control'))"/>
    <arg name="controller_names" value="ff_controller"                               if="$(eval     arg('velocity_control') and     arg('ff_control'))"/>
    <arg name="controller_names" value="scaled_pos_joint_traj_controller"            if="$(eval not arg('velocity_control') and not arg('ff_control'))"/>
    <!-- Dumb way to raise an error from launchfile (ff_control cannot be used for position_control) -->
    <node name="No ff available for position control (set velocity_control:=true) !" if="$(eval not arg('velocity_control') and     arg('ff_control'))"/>

    <!-- left arm driver -->
    <include file="$(find ur_robot_driver)/launch/ur_control.launch" ns="left_arm">
        <arg name="robot_ip" value="192.168.1.21"/>
        <arg name="reverse_port" value="50011"/>
        <arg name="script_sender_port" value="50012"/>
        <arg name="trajectory_port" value="50013"/>
        <arg name="script_command_port" value="50014"/>
        <arg name="tf_prefix" value="left_"/>
        <arg name="controllers" value="joint_state_controller $(arg controller_names) speed_scaling_state_controller force_torque_sensor_controller"/>
        <arg name="stopped_controllers" value="pos_joint_traj_controller joint_group_vel_controller"/>
        <arg name="controller_config_file" value="$(find prl_ur5_control)/config/left_arm_controllers.yaml"/>
        <arg name="kinematics_config" value="$(find prl_ur5_robot_configuration)/config/kinematics/ur5_left.yaml"/>
        <arg name="headless_mode" value="$(arg headless_mode)"/>
        <arg name="use_tool_communication" default="false"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- left ft sensor -->
    <node pkg="prl_ur5_control" type="ft_sensor_node.py" name="left_ft_sensor_node">
        <param name="topic" value="left_ft_wrench"/>
        <param name="frame_id" value="left_robotiq_ft_frame_id"/>
        <param name="ip_address" value="192.168.1.21"/>
        <param name="port" value="63351"/>
    </node>

    <!-- right arm driver -->
    <include file="$(find ur_robot_driver)/launch/ur_control.launch" ns="right_arm">
        <arg name="robot_ip" value="192.168.1.20"/>
        <arg name="reverse_port" value="50021"/>
        <arg name="script_sender_port" value="50022"/>
        <arg name="trajectory_port" value="50023"/>
        <arg name="script_command_port" value="50024"/>
        <arg name="tf_prefix" value="right_"/>
        <arg name="controllers" value="joint_state_controller $(arg controller_names) speed_scaling_state_controller force_torque_sensor_controller"/>
        <arg name="stopped_controllers" value="pos_joint_traj_controller joint_group_vel_controller"/>
        <arg name="controller_config_file" value="$(find prl_ur5_control)/config/right_arm_controllers.yaml"/>
        <arg name="kinematics_config" value="$(find prl_ur5_robot_configuration)/config/kinematics/ur5_right.yaml"/>
        <arg name="headless_mode" value="$(arg headless_mode)"/>
        <arg name="use_tool_communication" default="false"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- right ft sensor -->
    <node pkg="prl_ur5_control" type="ft_sensor_node.py" name="right_ft_sensor_node">
        <param name="topic" value="right_ft_wrench"/>
        <param name="frame_id" value="right_robotiq_ft_frame_id"/>
        <param name="ip_address" value="192.168.1.20"/>
        <param name="port" value="63351"/>
    </node>

    <!-- Grippers controllers -->
    <include file="$(find prl_ur5_control)/launch/$(arg setup)_gripper_control.launch.xml">
        <arg name="gripper_prefix" value="left"/>
        <arg name="sim" value="False"/>
    </include>
    <include file="$(find prl_ur5_control)/launch/$(arg setup)_gripper_control.launch.xml">
        <arg name="gripper_prefix" value="right"/>
        <arg name="sim" value="False"/>
    </include>

    <!-- combine joint states from arms and grippers -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
        <param name="rate" value="50"/>
        <rosparam param="source_list">[/left_arm/joint_states, /left_gripper/joint_states, /right_arm/joint_states, /right_gripper/joint_states]</rosparam>
    </node>

</launch>
